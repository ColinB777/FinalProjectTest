Akagami
_akagami
Invisible

DylanB — 09/27/2022 6:08 PM
Can you ask your mom to see if she can pick me up?
Akagami — 09/27/2022 6:11 PM
coming
you at the library?
DylanB — 09/28/2022 3:27 PM
Image
DylanB — 10/14/2022 2:39 PM
I signed up for the extra math help stuff on Tuesday 9:30-10:20 next week 
Akagami — 10/18/2022 4:31 PM
damn you taking a while
DylanB — 10/24/2022 4:08 PM
when you're done just walk over to perkins
Akagami — 10/24/2022 4:17 PM
might take a while
idk
i think we figured everything out but idk
always got problems
DylanB — 10/24/2022 4:27 PM
yeah we got a couple things to get done as well
Akagami — 10/24/2022 4:33 PM
yeah ok this’ll probably take a while longer
leave if you wanna
DylanB — 10/16/2023 2:51 PM
https://www.redbubble.com/i/sticker/Cute-Hedgehog-Listening-to-Music-and-Working-and-Studying-by-Pameloo/57850312.EJUG5
Redbubble
"Cute Hedgehog Listening to Music and Working and Studying" Sticker...
This cute hedgehog is busy working away!
Great gift idea for family and friends. • Millions of unique designs by independent artists. Find your thing.
"Cute Hedgehog Listening to Music and Working and Studying" Sticker...
DylanB — 09/24/2024 1:14 PM
library(ggplot2)

Set the seed for reproducibility
set.seed(123)
Binomial Distribution
n <- 20 # number of trials
p <- 0.4 # probability of success
binom_data <- rbinom(1000, n, p)

Histogram
ggplot(data.frame(binom_data), aes(x=binom_data)) + 
  geom_histogram(bins=10,fill='blue', alpha=0.7) + 
  labs(title='Binomial Distribution', x='Number of Successes', y='Frequency')

Poisson Distribution
lambda <- 3 # average number of events
poisson_data <- rpois(1000, lambda)
ggplot(data.frame(poisson_data), aes(x=poisson_data)) + 
  geom_histogram(bins=10,fill='green', alpha=0.7) + 
  labs(title='Poisson Distribution', x='Number of Events', y='Frequency')

Uniform Distribution
a <- 0 # minimum
b <- 1 # maximum
uniform_data <- runif(1000, a, b)
ggplot(data.frame(uniform_data), aes(x=uniform_data)) + 
  geom_histogram(bins=30,fill='orange', alpha=0.7) + 
  labs(title='Uniform Distribution', x='Value', y='Frequency')

Normal Distribution
mu <- 0 # mean
sigma <- 1 # standard deviation
normal_data <- rnorm(1000, mu, sigma)
ggplot(data.frame(normal_data), aes(x=normal_data)) + 
  geom_histogram(bins=30,fill='blue', alpha=0.7) + 
  labs(title='Normal Distribution', x='Value', y='Frequency')

Exponential Distribution
lambda_exp <- 1 # rate parameter
exponential_data <- rexp(1000, lambda_exp)
ggplot(data.frame(exponential_data), aes(x=exponential_data)) +
  geom_histogram(bins=30, fill='red', alpha=0.7) + 
  labs(title='Exponential Distribution', x='Time', y='Frequency')
DylanB — 10/01/2024 9:54 AM
  GNU nano 4.8                                                                                                                                                                                                                                                                                                                                      mpi_mcpi_p2p.c                                                                                                                                                                                                                                                                                                                                                #include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include "timer.h"

/*** TODO 1: include the required MPI header file ***/
Expand
message.txt
5 KB
DylanB — 10/03/2024 10:32 AM
#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include "timer.h"

/*** TODO 1: include the required MPI header file ***/
Expand
message.txt
5 KB
DylanB — Today at 12:05 PM
# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
Expand
# This workflow will do a clean ins.txt
3 KB
DylanB — Today at 1:35 PM
% FP - First Person telling truth
% SP - Second Person telling truth
FP v ~FP.
SP v ~SP.

% O - Orange Card
% P - Purple Card

% TDum - Tweedledum
% TDee - Tweedledee

FP :- TDum, O.
~FP :- TDum, P.
FP :- TDee, P.
~FP :- TDee, O.

SP :- TDum, O.
~SP :- TDum, P.
SP :- TDee, P.
~SP :- TDee, O.

FP v SP.
﻿
DylanB
dylanblev
 
# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
    push:
        branches: [main]

jobs:
    build:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [16.x]
                # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

        steps:
            - uses: actions/checkout@v2
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v2
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: "npm"
            - id: get-repo-values
              run: |
                  url=https://$(echo "${{github.repository}}" | sed "s/\//.github.io\//")
                  echo "url=$url" >> $GITHUB_OUTPUT
            - name: Update package.json homepage
              uses: jossef/action-set-json-field@v1
              with:
                  file: package.json
                  field: homepage
                  value: ${{ steps.get-repo-values.outputs.url }}
            - run: npm ci
            - run: npm run test -- --coverage |& tee ./public/test_report.txt
            - run: echo "<html><head><meta http-equiv='refresh' content='0; URL=${{github.server_url}}/${{github.repository}}' /></head><body>Redirecting to repository</body></html>" > ./public/github.html
            - run: npm run build --if-present

            - name: Deploy
              run: |
                  git config --global user.name ${user_name}
                  git config --global user.email ${user_email}
                  git remote set-url origin https://${github_token}@github.com/${repository}
                  npm run deploy
              env:
                  user_name: "github-actions[bot]"
                  user_email: "github-actions[bot]@users.noreply.github.com"
                  github_token: ${{ secrets.GH_TOKEN }}
                  repository: ${{ github.repository }}
